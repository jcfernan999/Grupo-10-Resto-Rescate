
package Vista;
import Modelo.Reserva;
import Modelo.ReservaData;
import Modelo.Cliente;
import Modelo.ClienteData;
import Modelo.Conexion;
import Modelo.Mesa;
import Modelo.MesaData;
import Modelo.TheModel;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import static java.lang.Integer.parseInt;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;

public class VistaReserva extends javax.swing.JInternalFrame {
    Date date = new Date();
    
    private List<JButton> botonesMesa;
    private DefaultTableModel modelo;
    private Connection connection = null;
    private Conexion conexion;
    
    private ClienteData clienteData;
    private ArrayList<Cliente> listaClientes;
    
    private MesaData mesaData;
    private ArrayList<Mesa> listaMesas;
    
    private ReservaData reservaData;
    private ArrayList<Reserva> listaReservas;
    
    public VistaReserva() {
        initComponents();
        botonesMesa = new ArrayList<>();
        try {
            conexion = new Conexion("jdbc:mysql://localhost/resto", "root", "");
            
            String horaActual = new SimpleDateFormat("HH:mm:ss").format(Calendar.getInstance().getTime());
            ftbHora.setText(horaActual);
            
            clienteData = new ClienteData(conexion);
            
            mesaData = new MesaData(conexion);
            listaMesas=(ArrayList)mesaData.listaDeCapacidad();
            
            reservaData = new ReservaData(conexion);
            tbId.setVisible(false);
            tbIdCliente.setVisible(false);
            tbIdMesa.setVisible(false);
            cargaCapacidadMesas();
            
            
        } 
        catch (ClassNotFoundException ex) {
            Logger.getLogger(VistaCategoria.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        pnlMesas = new javax.swing.JPanel();
        cbCapacidad = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        tbDni = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tbNombre = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        tbApellido = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        btnAgregar2 = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        dcFecha = new com.toedter.calendar.JDateChooser();
        ftbHora = new javax.swing.JFormattedTextField();
        tbNom = new javax.swing.JTextField();
        tbId = new javax.swing.JTextField();
        tbIdMesa = new javax.swing.JTextField();
        tbIdCliente = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        tbBuscar = new javax.swing.JTextField();
        btnBuscar1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tReserva = new javax.swing.JTable();

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Mesas"));

        pnlMesas.setLayout(new java.awt.GridLayout(0, 2, 1, 0));
        jScrollPane4.setViewportView(pnlMesas);

        cbCapacidad.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cbCapacidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCapacidadActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Capacidad");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cbCapacidad, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbCapacidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4))
        );

        jPanel3.setBackground(new java.awt.Color(153, 153, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel3.setText("DNI");

        jLabel4.setText("Nombre");

        tbNombre.setEditable(false);

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Buscar46.png"))); // NOI18N
        btnBuscar.setBorder(null);
        btnBuscar.setContentAreaFilled(false);
        btnBuscar.setFocusPainted(false);
        btnBuscar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Buscar46_2.png"))); // NOI18N
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Agregar_A_48.png"))); // NOI18N
        btnAgregar.setBorder(null);
        btnAgregar.setContentAreaFilled(false);
        btnAgregar.setFocusPainted(false);
        btnAgregar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Agregar_B_48.png"))); // NOI18N
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        jLabel8.setText("Apellido");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tbNombre)
                    .addComponent(tbDni, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(tbApellido))
                .addGap(49, 49, 49)
                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18))
        );

        jPanel7.setBackground(new java.awt.Color(0, 153, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Menu"));

        btnAgregar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ProductoAgregar.png"))); // NOI18N
        btnAgregar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregar2ActionPerformed(evt);
            }
        });

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ProductoModificar.png"))); // NOI18N
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ProductoEliminar.png"))); // NOI18N
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ProductoLimpiar.png"))); // NOI18N
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ProductoSalir.png"))); // NOI18N
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnAgregar2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnAgregar2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(btnModificar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(153, 153, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Reserva", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel5.setText("Fecha");

        jLabel6.setText("Hora");

        try {
            ftbHora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(dcFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tbId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tbIdMesa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tbIdCliente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(ftbHora, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(tbNom, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(dcFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tbNom, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(ftbHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tbIdMesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(tbId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tbIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 21, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(153, 153, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Buscar"));

        btnBuscar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Buscar46.png"))); // NOI18N
        btnBuscar1.setBorderPainted(false);
        btnBuscar1.setContentAreaFilled(false);
        btnBuscar1.setFocusPainted(false);
        btnBuscar1.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Buscar46_2.png"))); // NOI18N
        btnBuscar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscar1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("DNI");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBuscar1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(21, 21, 21))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(btnBuscar1)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel9.setBackground(new java.awt.Color(0, 153, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Buscar"));

        tReserva.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tReserva.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tReservaMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tReserva);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 463, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbCapacidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCapacidadActionPerformed
        int seleccionado = Integer.parseInt(cbCapacidad.getSelectedItem().toString());

        pnlMesas.removeAll();
        botonesMesas(seleccionado);
    }//GEN-LAST:event_cbCapacidadActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
       
        if("".equals(tbDni.getText()))
        {
            
            JOptionPane.showMessageDialog(null, "Ingrese el DNI");
        }
        else if(tbDni.getText().length()>=9)
        {
            
            JOptionPane.showMessageDialog(null, "Ingrese el 8 Numeros");
        }
        else
        {
            
            int dni=Integer.parseInt(tbDni.getText());
            
            Cliente cliente=clienteData.buscarClientePorDni(dni);
            
            if(cliente!=null){
                
                tbNombre.setText(cliente.getNombre());
                tbApellido.setText(cliente.getApellido());
            }
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        VistaCliente abrir = new VistaCliente();
        Principal.Escritorio.add(abrir);
        abrir.toFront();
        abrir.setVisible(true);
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnAgregar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregar2ActionPerformed
        
        
        
        if(tbDni.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Ingrese el DNI");
        }
        else if("".equals(tbNombre.getText()))
        {
            JOptionPane.showMessageDialog(null, "Selecione una Nombre");
        }
        else if("".equals(tbApellido.getText()))
        {
            JOptionPane.showMessageDialog(null, "Selecione una Apellido");
        }
        else if(dcFecha.getDate() == null)
        {
            JOptionPane.showMessageDialog(null, "Selecione una Fecha");
        }
        else if(ftbHora.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Selecione una Hora");
        }
        else
        {

            //Buscamos la Cliente
            Cliente cliente = clienteData.buscarClientePorDni(Integer.parseInt(tbDni.getText()));
            
            //Buscamos la Mesa
            Mesa mesa = mesaData.buscarMesa(btnMesaSeleccionada);
            mesa.setEstado(2);//Cambiamos el estado a reservado("2")
            //Actualizamos la mesa
            mesaData.actualizarMesa(mesa);
            
            Date date = dcFecha.getDate();
            long d = date.getTime();
            java.sql.Date fecha = new java.sql.Date(d);
            
            String hora = ftbHora.getText();
            
            boolean activo = true;
            //Agregamos el Reserva

            Reserva reserva = new Reserva(cliente,mesa,fecha,hora,activo);
          
            reservaData.guardarReserva(reserva);
            Limpiar();
            LimpiarTabla();
            cargarTablaReserva(btnMesaSeleccionada);
        }

    }//GEN-LAST:event_btnAgregar2ActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        if(tbDni.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Ingrese el DNI");
        }
        else if("".equals(tbNombre.getText()))
        {
            JOptionPane.showMessageDialog(null, "Selecione una Nombre");
        }
        else if("".equals(tbApellido.getText()))
        {
            JOptionPane.showMessageDialog(null, "Selecione una Apellido");
        }
        else if(dcFecha.getDate() == null)
        {
            JOptionPane.showMessageDialog(null, "Selecione una Fecha");
        }
        else if(ftbHora.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Selecione una Hora");
        }
        else
        {
            Cliente cliente=clienteData.buscarClientePorDni(Integer.parseInt(tbDni.getText()));
            Mesa mesa = mesaData.buscarMesa(btnMesaSeleccionada);
            
            java.util.Date date=dcFecha.getDate();
            long d =date.getTime();
            java.sql.Date fecha =new java.sql.Date(d);

            String hora = ftbHora.getText(); 
            int dni = Integer.parseInt(tbDni.getText());
            boolean activo = true;
            int id = Integer.parseInt(tbId.getText());

            Reserva reserva=new Reserva(id,cliente,mesa,fecha,hora,activo);
            reservaData.actualizarReserva(reserva);
            Limpiar();
            LimpiarTabla();
            cargarTablaReserva(btnMesaSeleccionada);
            
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if(tbDni.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Ingrese el DNI");
        }
        else if("".equals(tbNombre.getText()))
        {
            JOptionPane.showMessageDialog(null, "Selecione una Nombre");
        }
        else if("".equals(tbApellido.getText()))
        {
            JOptionPane.showMessageDialog(null, "Selecione una Apellido");
        }
        else if(dcFecha.getDate() == null)
        {
            JOptionPane.showMessageDialog(null, "Selecione una Fecha");
        }
        else if(ftbHora.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Selecione una Hora");
        }
        else
        {
            int id=Integer.parseInt(tbId.getText());
//            Reserva reserva=reservaData.buscarReserva(id);
//            int idmesa=reserva.getMesa().getIdMesa();
            
            reservaData.borrarReserva(id);
//            
//            //Buscamos la Mesa
//            Mesa mesa = mesaData.buscarMesa(idmesa);
//
//            mesa.setEstado(1);
//            //Actualizamos la mesa
//            mesaData.actualizarMesa(mesa);
            
            Limpiar();
            LimpiarTabla();
            cargarTablaReserva(btnMesaSeleccionada);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        Limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnBuscar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscar1ActionPerformed
        if(tbBuscar.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Ingrese DNI ");
        }
        else{
            LimpiarTabla();
            cargarTablaReservas(parseInt(tbBuscar.getText()));
        }
    }//GEN-LAST:event_btnBuscar1ActionPerformed

    private void tReservaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tReservaMousePressed
        int filaSeleccionada = this.tReserva.getSelectedRow();//Identificamos que fila ha sido seleccionada

        try {
            if(filaSeleccionada==-1)
            {
                JOptionPane.showMessageDialog(null, "Seleccione una Fila");
            }
            else{
                this.tbId.setText(tReserva.getValueAt(filaSeleccionada, 0).toString());
                this.tbIdCliente.setText(tReserva.getValueAt(filaSeleccionada, 1).toString());
                this.tbIdMesa.setText(tReserva.getValueAt(filaSeleccionada, 2).toString());
                btnMesaSeleccionada=Integer.parseInt(tbIdMesa.getText());
                int idC = Integer.parseInt(tReserva.getValueAt(filaSeleccionada, 1).toString());
                
                this.tbNombre.setText(tReserva.getValueAt(filaSeleccionada, 3).toString());
                this.tbApellido.setText(tReserva.getValueAt(filaSeleccionada, 4).toString());
                this.tbDni.setText(tReserva.getValueAt(filaSeleccionada, 5).toString());
                this.tbNom.setText(tReserva.getValueAt(filaSeleccionada, 6).toString());
                
                dcFecha.setDate(reservaData.buscarReserva(Integer.parseInt(tbId.getText())).getFecha());

                this.ftbHora.setText(tReserva.getValueAt(filaSeleccionada, 8).toString());
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al leer datos de la tabla: " + e.getMessage(), "Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_tReservaMousePressed

    int btnMesaSeleccionada=0;
    private void botonesMesas(int capacidad)
    {
//        botonesMesa.clear();
         MesaData mq = new MesaData(conexion);
        listaMesas =(ArrayList)mq.obtenerMesaDetalleBotones(capacidad);
        
        for(Mesa item:listaMesas)
        {
            JButton boton = new JButton(item.getNombre());
            boton.setName(item.getIdMesa()+"");
            boton.setLayout(null);
            boton.setBorder(BorderFactory.createEmptyBorder());
            boton.setFont(new Font("", Font.BOLD, 10));
            boton.setSize(new Dimension(100, 105));
            boton.setPreferredSize(new Dimension(100, 105));
            boton.setMaximumSize(new Dimension(100, 105));
            boton.setMinimumSize(new Dimension(100, 105));
//            boton.setBorderPainted(false);
            
//            boton.setContentAreaFilled(false);
            pnlMesas.add(boton);
            botonesMesa.add(boton);
            
            pnlMesas.updateUI();
            
             boton.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    btnMesaSeleccionada = Integer.parseInt(boton.getName());
                    tbNom.setText(boton.getText());
                    Reserva reserva = reservaData.buscarReservaPorMesaEstado(btnMesaSeleccionada);
                   
                    if(reserva != null)
                    {
                        cargarTablaReserva(btnMesaSeleccionada);
                    }
                   
                }
            });
            if(item.getEstado()==0)
            {
                boton.setBackground(Color.red);
                boton.setIcon(new ImageIcon(getClass().getResource("/imagenes/Mesa/Ocupada_A.png")));
            }
            if(item.getEstado()==1)
            {
                boton.setBackground(Color.green);
                boton.setIcon(new ImageIcon(getClass().getResource("/imagenes/Mesa/Libre_A.png")));
            }
            if(item.getEstado()==2)
            {   
                Reserva reserva = reservaData.buscarReservaPorMesa(item.getIdMesa());
                if(reserva == null)
                {
                    boton.setBackground(Color.green);
                    boton.setIcon(new ImageIcon(getClass().getResource("/imagenes/Mesa/Libre_A.png")));
                }
                else{
                    boton.setBackground(Color.yellow);
                    boton.setIcon(new ImageIcon(getClass().getResource("/imagenes/Mesa/Reservado_A.png")));
                }
            }
           boton.setHorizontalTextPosition(SwingConstants.CENTER);
            boton.setVerticalTextPosition(SwingConstants.TOP);
        }
    }
    public void cargaCapacidadMesas()
    {
        MesaData mq = new MesaData(conexion);
        listaMesas =(ArrayList)mq.listaDeCapacidad();
        for(Mesa item:listaMesas)
        {
            cbCapacidad.addItem(item.getCapacidad());
        }
    }
    
    public void cargarTablaReservas(int dni){
        listaReservas =(ArrayList)reservaData.obtenerReservaPorDNI(dni);
        String[] columnName = {"IdR","IdC","IdM", "Nombre","Apellido","dni", "Mesa", "Fecha", "Hora"};
        Object[][] rows = new Object[listaReservas.size()][9];
        for(int i = 0; i < listaReservas.size(); i++)
        {
            rows[i][0] = listaReservas.get(i).getIdReserva();
            rows[i][1] = listaReservas.get(i).getCliente().getIdCliente();
            rows[i][2] = listaReservas.get(i).getMesa().getIdMesa();
            rows[i][3] = listaReservas.get(i).getCliente().getNombre();
            rows[i][4] = listaReservas.get(i).getCliente().getApellido();
            rows[i][5]=listaReservas.get(i).getCliente().getDni();
            rows[i][6] = listaReservas.get(i).getMesa().getNombre();
            rows[i][7] = listaReservas.get(i).getFecha();
            rows[i][8] = listaReservas.get(i).getHora();
        }
        
        TheModel model = new TheModel(rows, columnName);
        tReserva.setModel(model);
        tReserva.setRowHeight(27);
        
        
        
        
        tReserva.getColumnModel().getColumn(0).setMaxWidth(0);
        tReserva.getColumnModel().getColumn(0).setMinWidth(0);
        tReserva.getColumnModel().getColumn(0).setPreferredWidth(0);
        
        tReserva.getColumnModel().getColumn(1).setMaxWidth(0);
        tReserva.getColumnModel().getColumn(1).setMinWidth(0);
        tReserva.getColumnModel().getColumn(1).setPreferredWidth(0);
        
        tReserva.getColumnModel().getColumn(2).setMaxWidth(0);
        tReserva.getColumnModel().getColumn(2).setMinWidth(0);
        tReserva.getColumnModel().getColumn(2).setPreferredWidth(0);
        
        tReserva.getColumnModel().getColumn(3).setPreferredWidth(150);
        
        tReserva.getColumnModel().getColumn(4).setMaxWidth(0);
        tReserva.getColumnModel().getColumn(4).setMinWidth(0);
        tReserva.getColumnModel().getColumn(4).setPreferredWidth(0);
        
        tReserva.getColumnModel().getColumn(5).setPreferredWidth(80);
        tReserva.getColumnModel().getColumn(6).setPreferredWidth(60);
        tReserva.getColumnModel().getColumn(7).setPreferredWidth(80);
        tReserva.getColumnModel().getColumn(8).setPreferredWidth(50);
        
    }
    DefaultTableModel temp;
    void LimpiarTabla(){
        try{
            temp = (DefaultTableModel) tReserva.getModel();
            int a =temp.getRowCount()-1;
            for(int i=0; i<a; i++)
                temp.removeRow(0); 
        }catch(Exception e){
            System.out.println(e);
        }
    }
    public void Limpiar()
    {
        tbNombre.setText("");
        tbApellido.setText("");
        tbDni.setText("");
        tbNom.setText("");
        dcFecha.setDate(null);
        
    }
    
    public void cargarTablaReserva(int idMesa){
        String str="";
        listaReservas =(ArrayList)reservaData.obtenerReservaPorMesa(idMesa);
         String[] columnName = {"IdR","IdC","IdM", "Nombre","Apellido","DNI", "Mesa", "Fecha", "Hora"};
        Object[][] rows = new Object[listaReservas.size()][9];
        for(int i = 0; i < listaReservas.size(); i++)
        {
            rows[i][0] = listaReservas.get(i).getIdReserva();
            rows[i][1] = listaReservas.get(i).getCliente().getIdCliente();
            rows[i][2] = listaReservas.get(i).getMesa().getIdMesa();
            rows[i][3] = listaReservas.get(i).getCliente().getNombre();
            rows[i][4] = listaReservas.get(i).getCliente().getApellido();
            rows[i][5]=listaReservas.get(i).getCliente().getDni();
            rows[i][6]=listaReservas.get(i).getMesa().getNombre();
            
            rows[i][7] = listaReservas.get(i).getFecha();
            rows[i][8] = listaReservas.get(i).getHora();
        }
        
        TheModel model = new TheModel(rows, columnName);
        tReserva.setModel(model);
        tReserva.setRowHeight(27);
        
        
        
        
        tReserva.getColumnModel().getColumn(0).setMaxWidth(0);
        tReserva.getColumnModel().getColumn(0).setMinWidth(0);
        tReserva.getColumnModel().getColumn(0).setPreferredWidth(0);
        
        tReserva.getColumnModel().getColumn(1).setMaxWidth(0);
        tReserva.getColumnModel().getColumn(1).setMinWidth(0);
        tReserva.getColumnModel().getColumn(1).setPreferredWidth(0);
        
        tReserva.getColumnModel().getColumn(2).setMaxWidth(0);
        tReserva.getColumnModel().getColumn(2).setMinWidth(0);
        tReserva.getColumnModel().getColumn(2).setPreferredWidth(0);
        
        tReserva.getColumnModel().getColumn(3).setPreferredWidth(150);
        
        tReserva.getColumnModel().getColumn(4).setMaxWidth(0);
        tReserva.getColumnModel().getColumn(4).setMinWidth(0);
        tReserva.getColumnModel().getColumn(4).setPreferredWidth(0);
        
        tReserva.getColumnModel().getColumn(5).setPreferredWidth(80);
        tReserva.getColumnModel().getColumn(6).setPreferredWidth(60);
        tReserva.getColumnModel().getColumn(7).setPreferredWidth(80);
        tReserva.getColumnModel().getColumn(8).setPreferredWidth(50);
        
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAgregar2;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnBuscar1;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<Integer> cbCapacidad;
    private com.toedter.calendar.JDateChooser dcFecha;
    private javax.swing.JFormattedTextField ftbHora;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel pnlMesas;
    private javax.swing.JTable tReserva;
    private javax.swing.JTextField tbApellido;
    private javax.swing.JTextField tbBuscar;
    private javax.swing.JTextField tbDni;
    private javax.swing.JTextField tbId;
    private javax.swing.JTextField tbIdCliente;
    private javax.swing.JTextField tbIdMesa;
    private javax.swing.JTextField tbNom;
    private javax.swing.JTextField tbNombre;
    // End of variables declaration//GEN-END:variables
}
